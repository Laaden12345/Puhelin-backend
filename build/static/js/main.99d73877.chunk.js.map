{"version":3,"sources":["PersonFrom/PersonForm.js","Persons/Persons.js","Filter/Filter.js","services/personsService.js","Notifications/Notification.js","App.js","index.js"],"names":["PersonForm","newName","addName","handlePersonChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","removePerson","personList","map","person","key","name","number","onClick","e","id","Filter","nameFilter","handleFilterChange","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","filteredPersons","setFilteredPersons","setName","setNumber","setFilter","notification","setNotification","useEffect","personService","initialPersons","event","target","newFilteredPersons","filter","toLocaleLowerCase","includes","preventDefault","find","window","alert","confirm","personToUpdate","changedPerson","personsService","returnedPerson","setInterval","nameObject","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d73877.chunk.js","sourcesContent":["import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  addName,\n  handlePersonChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handlePersonChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, removePerson }) => {\n  const personList = persons.map(person => (\n    <tr key={person.name}>\n      <td>{person.name}</td>\n      <td>{person.number}</td>\n      <td>\n        <button onClick={e => removePerson(e, person.id)}>Delete</button>\n      </td>\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{personList}</tbody>\n    </table>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ nameFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter: <input value={nameFilter} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\nconst baseUrl = \"/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n};\n","import React from \"react\";\nimport \"./Notification.css\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"notification\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport PersonForm from \"./PersonFrom/PersonForm\";\nimport Persons from \"./Persons/Persons\";\nimport Filter from \"./Filter/Filter\";\nimport personService from \"./services/personsService\";\nimport personsService from \"./services/personsService\";\nimport Notification from \"./Notifications/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState(persons);\n  const [newName, setName] = useState(\"\");\n  const [newNumber, setNumber] = useState(\"\");\n  const [nameFilter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  const updatePerson = (id, person) => {\n    personsService\n      .update(id, person)\n      .then(returnedPerson => {\n        setPersons(\n          persons.map(person => (person.id !== id ? person : returnedPerson))\n        );\n      })\n      .then(setNotification(`${person.name}'s number was edited.`))\n      .then(\n        setInterval(() => {\n          setNotification(null);\n        }, 5000)\n      );\n  };\n  const addName = event => {\n    event.preventDefault();\n    if (\n      persons.find(\n        person => person.name === newName && person.number === newNumber\n      )\n    ) {\n      window.alert(`${newName} is already added to phonebook`);\n\n      setFilter(\"\");\n      setFilteredPersons(persons);\n    } else if (persons.find(person => person.name === newName)) {\n      if (\n        window.confirm(\n          `This person already exists in the phonebook, replace old number with the new one?`\n        )\n      ) {\n        const personToUpdate = persons.find(person => person.name === newName);\n        const changedPerson = { ...personToUpdate, number: newNumber };\n        updatePerson(changedPerson.id, changedPerson);\n      }\n    } else {\n      const nameObject = { name: newName, number: newNumber };\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setName(\"\");\n          setNumber(\"\");\n          setFilter(\"\");\n          setFilteredPersons(persons);\n        })\n        .then(setNotification(`${nameObject.name} was added to phonebook.`))\n        .then(\n          setInterval(() => {\n            setNotification(null);\n          }, 5000)\n        );\n    }\n  };\n  const removePerson = (event, id) => {\n    event.preventDefault();\n    const personToDelete = persons.find(person => person.id === id);\n    if (\n      window.confirm(`Are you sure you want to delete ${personToDelete.name}`)\n    ) {\n      personService\n        .remove(id)\n        .then(\n          setNotification(\n            `${personToDelete.name} was deleted from the phonebook.`\n          )\n        )\n        .then(\n          setInterval(() => {\n            setNotification(null);\n          }, 5000)\n        );\n      setPersons(persons.filter(person => person.id !== id));\n    }\n  };\n\n  const handlePersonChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n    const newFilteredPersons = persons.filter(person =>\n      person.name\n        .toLocaleLowerCase()\n        .includes(event.target.value.toLocaleLowerCase())\n    );\n    setFilteredPersons(newFilteredPersons);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        addName={addName}\n        newNumber={newNumber}\n        handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={nameFilter ? filteredPersons : persons}\n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}