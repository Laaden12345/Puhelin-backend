{"version":3,"sources":["PersonFrom/PersonForm.js","Persons/Persons.js","Filter/Filter.js","services/personsService.js","Notifications/Notification.js","Notifications/NotificationError.js","App.js","index.js"],"names":["PersonForm","newName","addName","handlePersonChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","removePerson","personList","map","person","key","name","number","onClick","e","id","Filter","nameFilter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","NotificationError","App","useState","setPersons","filteredPersons","setFilteredPersons","setName","setNumber","setFilter","notification","setNotification","notificationError","setNotificationError","useEffect","personService","initialPersons","event","target","newFilteredPersons","filter","toLocaleLowerCase","includes","preventDefault","find","window","alert","confirm","personToUpdate","changedPerson","personsService","returnedPerson","setInterval","nameObject","concat","catch","error","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63b4ff22.chunk.js","sourcesContent":["import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  addName,\n  handlePersonChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handlePersonChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, removePerson }) => {\n  const personList = persons.map(person => (\n    <tr key={person.name}>\n      <td>{person.name}</td>\n      <td>{person.number}</td>\n      <td>\n        <button onClick={e => removePerson(e, person.id)}>Delete</button>\n      </td>\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{personList}</tbody>\n    </table>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ nameFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter: <input value={nameFilter} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\nconst baseUrl = \"api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n};\n","import React from \"react\";\nimport \"./Notification.css\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"notification\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport \"./NotificationError.css\";\n\nconst NotificationError = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"notificationError\">{message}</div>;\n};\n\nexport default NotificationError;\n","import React, { useState, useEffect } from 'react';\nimport PersonForm from './PersonFrom/PersonForm';\nimport Persons from './Persons/Persons';\nimport Filter from './Filter/Filter';\nimport personService from './services/personsService';\nimport personsService from './services/personsService';\nimport Notification from './Notifications/Notification';\nimport NotificationError from './Notifications/NotificationError';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState(persons);\n  const [newName, setName] = useState('');\n  const [newNumber, setNumber] = useState('');\n  const [nameFilter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [notificationError, setNotificationError] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  const updatePerson = (id, person) => {\n    personsService\n      .update(id, person)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((person) => (person.id !== id ? person : returnedPerson)),\n        );\n      })\n      .then(setNotification(`${person.name}'s number was edited.`))\n      .then(\n        setInterval(() => {\n          setNotification(null);\n        }, 5000),\n      );\n  };\n  const addName = (event) => {\n    event.preventDefault();\n    if (\n      persons.find(\n        (person) => person.name === newName && person.number === newNumber,\n      )\n    ) {\n      window.alert(`${newName} is already added to phonebook`);\n\n      setFilter('');\n      setFilteredPersons(persons);\n    } else if (persons.find((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `This person already exists in the phonebook, replace old number with the new one?`,\n        )\n      ) {\n        const personToUpdate = persons.find(\n          (person) => person.name === newName,\n        );\n        const changedPerson = { ...personToUpdate, number: newNumber };\n        updatePerson(changedPerson.id, changedPerson);\n      }\n    } else {\n      const nameObject = { name: newName, number: newNumber };\n      personService\n        .create(nameObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setName('');\n          setNumber('');\n          setFilter('');\n          setFilteredPersons(persons);\n          setNotification(`${nameObject.name} was added to phonebook.`);\n          setInterval(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setNotificationError(error.response.data.error);\n        })\n        .then(\n          setInterval(() => {\n            setNotificationError(null);\n          }, 5000),\n        )\n    }\n  };\n  const removePerson = (event, id) => {\n    event.preventDefault();\n    const personToDelete = persons.find((person) => person.id === id);\n    if (\n      window.confirm(`Are you sure you want to delete ${personToDelete.name}`)\n    ) {\n      personService\n        .remove(id)\n        .then(\n          setNotification(\n            `${personToDelete.name} was deleted from the phonebook.`,\n          ),\n        )\n        .then(\n          setInterval(() => {\n            setNotification(null);\n          }, 5000),\n        );\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  const handlePersonChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n    const newFilteredPersons = persons.filter((person) =>\n      person.name\n        .toLocaleLowerCase()\n        .includes(event.target.value.toLocaleLowerCase()),\n    );\n    setFilteredPersons(newFilteredPersons);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <NotificationError message={notificationError} />\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        addName={addName}\n        newNumber={newNumber}\n        handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={nameFilter ? filteredPersons : persons}\n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}